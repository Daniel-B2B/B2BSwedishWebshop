@model SeurataGoogleShoppingProductListModel
@using Nop.Plugin.Seurata.GoogleShopping.Models;

@{
    Layout = ViewNames.AdminLayout;
    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;
    Html.AddCssFileParts(ViewNames.GoogleShoppingStyles);
    //page title
    ViewBag.Title = T("Plugins.Seurata.GoogleShopping.Page.List.Title").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Seurata-GoogleShopping-Products-Menu");
}
@using Nop.Plugin.Seurata.GoogleShopping.Constants;
@using Nop.Core.Infrastructure;
@using Nop.Web.Framework;
@using Nop.Web.Framework.UI;
@using Nop.Web.Framework.Events;
@using Nop.Services.Events;


<div class="content-header clearfix">
    <h1 class="pull-left">
        @T("Plugins.Seurata.Google.Shopping.Product")
    </h1>
    <div class="pull-right">
        <div class="btn-group">
            <button type="button" class="btn btn-success">
                <i class="fa fa-download"></i>
                @T("Plugins.Seurata.GoogleShopping.Export")
            </button>
            <button type="button" class="btn btn-success dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                <span class="caret"></span>
                <span class="sr-only">&nbsp;</span>
            </button>
            <ul class="dropdown-menu" role="menu">
                <li>
                    <button type="button" id="shopping-exportexcel-selected">
                        <i class="fa fa-file-excel-o"></i>
                        @T("Plugins.Seurata.GoogleShopping.ExportToExcel.Selected")
                    </button>
                </li>
            </ul>
        </div>
        <button type="button" name="importexcel" class="btn bg-olive" data-toggle="modal" data-target="#shopping-importexcel-window">
            <i class="fa fa-upload"></i>
            @T("Plugins.Seurata.GoogleShopping.Import")
        </button>
        <button type="button" data-toggle="modal" data-target="#myModal" class="btn bg-red" id="unpublish-merchant-center">
            <i class="fa fa-eye-slash"></i>
            @T("Plugins.Seurata.GoogleShopping.Unpublish.All")
        </button>
        <button type="button" id="publish-merchant-center" data-toggle="modal" data-target="#myModal" class="btn btn-primary">
            <i class="fa fa-cloud-upload"></i>
            @T("Plugins.Seurata.GoogleShopping.Publish.MerchantCenter.All")
        </button>

        <button type="button" id="stop-running-task-list" class="btn bg-red" data-request-url="@Url.Action("StopRunningTask", "SeurataGoogleShopping")" style="display:none" title="It will take some seconds for running task to get cancelled. Note : It will not effect scheduler.">
            <i class="fa fa-stop-circle"></i>
            @T("Plugins.Seurata.GoogleShopping.Task.Cancel")
        </button>
    </div>
</div>
<div class="col-md-12" style="display:none" id="syncing-div">
    <div class="start-loader ajax-loader-shop-feed-div syncing-div">
        <i class="fa fa-refresh fa-spin ajax-loader-shop-feed-spin" id="spinner-sync"></i>
        <i class="fa fa-check ajax-loader-shop-feed-spin" id="spinner-sync-success" style="display:none"></i>
        <i class="fa fa-warning ajax-loader-shop-feed-spin" id="spinner-sync-error" style="display:none"></i>
        <span class="ajax-loader-shop-feed-span" id="sync-message"></span>
    </div>
</div>
<div class="col-md-12" style="display:none" id="import-syncing-div">
    <div class="start-loader ajax-loader-shop-feed-div syncing-div">
        <span class="ajax-loader-shop-feed-span" id="sync-message-import"></span>
    </div>
</div>
<div id="syncServiceCheck" data-request-url="@Url.Action("CheckFeedRunning", "SeurataGoogleShopping")"
     data-request-errorpopup="@Url.Action("GetErrorListByFeedId", "SeurataGoogleShopping")"></div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <script type="text/javascript">
        $(document).ready(function () {
            bindBootstrapTabSelectEvent('product-edit');
        });
    </script>

    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default panel-search">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.Sku)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopEditorFor(model => model.Sku)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.SearchCategoryId)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopDropDownList("SearchCategoryId", Model.AvailableCategories)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.SearchManufacturerId)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopDropDownList("SearchManufacturerId", Model.AvailableManufacturers)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.StatusIds)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.StatusIds, new { SelectList = Model.AvailableStatuses })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.Name)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopEditorFor(model => model.Name)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.SearchStoreId)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopDropDownList("SearchStoreId", Model.AvailableStores)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.StockAvailabilityStatusIds)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.StockAvailabilityStatusIds, new { SelectList = Model.StockAvailabilityStatuses })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-offset-4 col-md-8">
                                        <button type="button" id="search-products" class="btn btn-primary btn-search">
                                            <i class="fa fa-search"></i>
                                            @T("Admin.Common.Search")
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div id="product-edit" class="nav-tabs-custom">
            <ul class="nav nav-tabs">
                @Html.RenderBootstrapTabHeader("tab-all", @T("Plugins.Seurata.GooogleShopping.All.Product.List"), true)
                @Html.RenderBootstrapTabHeader("tab-published", @T("Plugins.Seurata.GooogleShopping.Published.Product.List"))
                @Html.RenderBootstrapTabHeader("tab-error", @T("Plugins.Seurata.GooogleShopping.Error.Product.List"))
                @Html.RenderBootstrapTabHeader("tab-recently-imported", @T("Plugins.Seurata.GooogleShopping.RecentlyImported.Product.List"))
                @Html.RenderBootstrapTabHeader("tab-unpublished", @T("Plugins.Seurata.GooogleShopping.UnPublished.Product.List"))
            </ul>
            <div class="tab-content">
                @Html.RenderBootstrapTabContent("tab-all", @TabAll(), true)
                @Html.RenderBootstrapTabContent("tab-published", @TabPublished())
                @Html.RenderBootstrapTabContent("tab-error", @TabError())
                @Html.RenderBootstrapTabContent("tab-recently-imported", @TabRecentlyImported())
                @Html.RenderBootstrapTabContent("tab-unpublished", @TabUnPublished())
            </div>
        </div>
    </div>

    @helper TabAll()
    {
        @Html.Partial("~/Plugins/Nop.Plugin.Seurata.GoogleShopping/Views/SeurataGoogleShopping/_AllList.cshtml")
    }

    @helper TabPublished()
    {
        @Html.Partial("~/Plugins/Nop.Plugin.Seurata.GoogleShopping/Views/SeurataGoogleShopping/_Published.cshtml")
    }

    @helper TabError()
    {
        @Html.Partial("~/Plugins/Nop.Plugin.Seurata.GoogleShopping/Views/SeurataGoogleShopping/_Error.cshtml")
    }

    @helper TabRecentlyImported()
    {
        @Html.Partial("~/Plugins/Nop.Plugin.Seurata.GoogleShopping/Views/SeurataGoogleShopping/_RecentlyImported.cshtml")
    }

    @helper TabUnPublished()
    {
        @Html.Partial("~/Plugins/Nop.Plugin.Seurata.GoogleShopping/Views/SeurataGoogleShopping/_Unpublished.cshtml")
    }

    <script type="text/javascript">
        var selectedIds = [];
        var interval_id_nxt = '';
        var interval_id_divHide = '';
        function BindRecord()
        {
            var grid = $('#shopping-products-grid').data('kendoGrid');
            grid.dataSource.page(1);

            grid = $('#error-shopping-products-grid').data('kendoGrid');
            grid.dataSource.page(1);

            grid = $('#published-shopping-products-grid').data('kendoGrid');
            grid.dataSource.page(1);

            grid = $('#draft-shopping-products-grid').data('kendoGrid');
            grid.dataSource.page(1);

            grid = $('#unpublished-shopping-products-grid').data('kendoGrid');
            grid.dataSource.page(1);

            $('.checkboxGroups').attr('checked', false).change();
            selectedIds = [];
            return false;
        }

    $(document).ready(function() {
        $('#search-products').click(function() {
            BindRecord();
        });

        $("#@Html.FieldIdFor(model => model.Name), #@Html.FieldIdFor(model => model.Sku)").keydown(function(event) {
            if (event.keyCode === 13) {
                $("#search-products").click();
                return false;
            }
        });

        $('#mastercheckbox').click(function () {
            $('.checkboxGroups').attr('checked', $(this).is (':checked')).change();
        });

        $('#mastercheckboxpublished').click(function () {
            $('.checkboxGroupsPublished').attr('checked', $(this).is(':checked')).change();
        });

        $('#mastercheckboxerror').click(function () {
            $('.checkboxGroupsError').attr('checked', $(this).is(':checked')).change();
        });

        $('#mastercheckboxdraft').click(function () {
            $('.checkboxGroupsDraft').attr('checked', $(this).is(':checked')).change();
        });

        $('#mastercheckboxunpublished').click(function () {
            $('.checkboxGroupsUnpublished').attr('checked', $(this).is(':checked')).change();
        });

        //wire up checkboxes.
        $('#shopping-products-grid').on('change', 'input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]', function (e) {
            var $check = $(this);
            if ($check.is(":checked") == true) {
                var checked = jQuery.inArray($check.val(), selectedIds);
                if (checked == -1) {
                    //add id to selectedIds.
                    selectedIds.push($check.val());
                }
            }
            else {
                var checked = jQuery.inArray($check.val(), selectedIds);
                if (checked > -1) {
                    //remove id from selectedIds.
                    selectedIds = $.grep(selectedIds, function (item, index) {
                        return item != $check.val();
                    });
                }
            }
            updateMasterCheckbox();
        });
        $('#error-shopping-products-grid').on('change', 'input[type=checkbox][id!=mastercheckboxerror][class=checkboxGroupsError]', function (e) {
            var $check = $(this);
            if ($check.is(":checked") == true) {
                var checked = jQuery.inArray($check.val(), selectedIds);
                if (checked == -1) {
                    //add id to selectedIds.
                    selectedIds.push($check.val());
                }
            }
            else {
                var checked = jQuery.inArray($check.val(), selectedIds);
                if (checked > -1) {
                    //remove id from selectedIds.
                    selectedIds = $.grep(selectedIds, function (item, index) {
                        return item != $check.val();
                    });
                }
            }
            updateMasterCheckbox();
        });
        $('#published-shopping-products-grid').on('change', 'input[type=checkbox][id!=mastercheckboxpublished][class=checkboxGroupsPublished]', function (e) {
            var $check = $(this);
            if ($check.is(":checked") == true) {
                var checked = jQuery.inArray($check.val(), selectedIds);
                if (checked == -1) {
                    //add id to selectedIds.
                    selectedIds.push($check.val());
                }
            }
            else {
                var checked = jQuery.inArray($check.val(), selectedIds);
                if (checked > -1) {
                    //remove id from selectedIds.
                    selectedIds = $.grep(selectedIds, function (item, index) {
                        return item != $check.val();
                    });
                }
            }
            updateMasterCheckbox();
        });
        $('#draft-shopping-products-grid').on('change', 'input[type=checkbox][id!=mastercheckboxdraft][class=checkboxGroupsDraft]', function (e) {
            var $check = $(this);
            if ($check.is(":checked") == true) {
                var checked = jQuery.inArray($check.val(), selectedIds);
                if (checked == -1) {
                    //add id to selectedIds.
                    selectedIds.push($check.val());
                }
            }
            else {
                var checked = jQuery.inArray($check.val(), selectedIds);
                if (checked > -1) {
                    //remove id from selectedIds.
                    selectedIds = $.grep(selectedIds, function (item, index) {
                        return item != $check.val();
                    });
                }
            }
            updateMasterCheckbox();
        });
        $('#unpublished-shopping-products-grid').on('change', 'input[type=checkbox][id!=mastercheckboxunpublished][class=checkboxGroupsUnpublished]', function (e) {
            var $check = $(this);
            if ($check.is(":checked") == true) {
                var checked = jQuery.inArray($check.val(), selectedIds);
                if (checked == -1) {
                    //add id to selectedIds.
                    selectedIds.push($check.val());
                }
            }
            else {
                var checked = jQuery.inArray($check.val(), selectedIds);
                if (checked > -1) {
                    //remove id from selectedIds.
                    selectedIds = $.grep(selectedIds, function (item, index) {
                        return item != $check.val();
                    });
                }
            }
            updateMasterCheckbox();
        });

        $('#unpublish-merchant-center').on('click', function () {
            $('#mod-pub-btn').hide();
            $('#mod-synsingle-btn').hide();
            $('#mod-unpub-btn').show();
            var totalSelected = selectedIds.length;
            if (totalSelected > 0) {
                $('.modal-body').html("Are you sure you want to <b>unpublish " + totalSelected + " selected feeds</b> from google merchant center ?<br /> <b>Note</b>: Feeds(inc variants) that are already in Processing, New, Unpublished state will not be considered.");
            }
            else {
                $('.modal-body').html("Are you sure you want to <b>unpublish all</b> previously published feeds from google merchant center ?<br /> <b>Note</b>: Feeds(inc variants) that are already in Processing, New, Unpublished state will not be considered.");
            }
        });

        $('#publish-merchant-center').on('click', function () {
            $('#mod-unpub-btn').hide();
            $('#mod-synsingle-btn').hide();
            $('#mod-pub-btn').show();
            var totalSelected = selectedIds.length;
            if (totalSelected > 0) {
                $('.modal-body').html("Are you sure you want to <b>publish " + totalSelected + " selected feeds</b> to google merchant center ? <br /> <b>Note</b>: Feeds(inc variants) that are already in Processing state will not be considered.");
            }
            else {
                $('.modal-body').html("Are you sure you want to <b>publish all</b> feeds to google merchant center ?<br /> <b>Note</b>: Feeds(inc variants) that are already in Processing state will not be considered.");
            }
        });

        $("#import-button-clicked").on('click', function () {
            impc = true;
        });
    });

    function additionalData()
    {
        var data = {
                    Sku: $('#@Html.FieldIdFor(model => model.Sku)').val(),
                    Name: $('#@Html.FieldIdFor(model => model.Name)').val(),
                    SearchCategoryId: $('#SearchCategoryId').val(),
                    SearchManufacturerId: $('#SearchManufacturerId').val(),
                    SearchStoreId: $('#SearchStoreId').val(),
                    StockAvailabilityStatusIds: $('#@Html.FieldIdFor(model => model.StockAvailabilityStatusIds)').val(),
                    StatusIds: $('#@Html.FieldIdFor(model => model.StatusIds)').val()
                };
        addAntiForgeryToken(data);
        return data;
    }

    function onDataBound(e)
    {
        var tabID = e.sender.element[0].id;
        var attrVal = "";
        switch (tabID) {
            case "published-shopping-products-grid":
                attrVal = "tab-published";
                break;
            case "unpublished-shopping-products-grid":
                attrVal = "tab-unpublished";
                break;
            case "error-shopping-products-grid":
                attrVal = "tab-error";
                break;
            case "shopping-products-grid":
                attrVal = "tab-all";
                break;
            case "draft-shopping-products-grid":
                attrVal = "tab-recently-imported";
                break;
            default:
        }
        var grid = $("#" + tabID).data("kendoGrid");
        var dataSource = grid.dataSource;
        var totalRecords = dataSource.total();
        var tab = $("[data-tab-name=" + attrVal + "]");
        var val = tab.html().split(' ');
        val = val[0] + " (" + totalRecords + ")";
        tab.html(val);

        $('#shopping-products-grid input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]').each(function () {
            var currentId = $(this).val();
            var checked = jQuery.inArray(currentId, selectedIds);
            $(this).attr('checked', checked > -1);
        });
        $('#error-shopping-products-grid input[type=checkbox][id!=mastercheckboxerror][class=checkboxGroupsError]').each(function () {
            var currentId = $(this).val();
            var checked = jQuery.inArray(currentId, selectedIds);
            $(this).attr('checked', checked > -1);
        });
        $('#published-shopping-products-grid input[type=checkbox][id!=mastercheckboxpublished][class=checkboxGroupsPublished]').each(function () {
            var currentId = $(this).val();
            var checked = jQuery.inArray(currentId, selectedIds);
            $(this).attr('checked', checked > -1);
        });
        $('#draft-shopping-products-grid input[type=checkbox][id!=mastercheckboxdraft][class=checkboxGroupsDraft]').each(function () {
            var currentId = $(this).val();
            var checked = jQuery.inArray(currentId, selectedIds);
            $(this).attr('checked', checked > -1);
        });
        $('#unpublished-shopping-products-grid input[type=checkbox][id!=mastercheckboxunpublished][class=checkboxGroupsUnpublished]').each(function () {
            var currentId = $(this).val();
            var checked = jQuery.inArray(currentId, selectedIds);
            $(this).attr('checked', checked > -1);
        });
        updateMasterCheckbox();
    }

    function updateMasterCheckbox()
    {
        var numChkBoxes = $('#shopping-products-grid input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]').length;
        var numChkBoxesChecked = $('#shopping-products-grid input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]:checked').length;
        $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);

        var numChkBoxesPublished = $('#published-shopping-products-grid input[type=checkbox][id!=mastercheckboxpublished][class=checkboxGroupspublished]').length;
        var numChkBoxesCheckedPublished = $('#published-shopping-products-grid input[type=checkbox][id!=mastercheckboxpublished][class=checkboxGroupspublished]:checked').length;
        $('#mastercheckboxpublished').attr('checked', numChkBoxesPublished == numChkBoxesCheckedPublished && numChkBoxesPublished > 0);

        var numChkBoxesError = $('#error-shopping-products-grid input[type=checkbox][id!=mastercheckboxError][class=checkboxGroupsError]').length;
        var numChkBoxesCheckedError = $('#error-shopping-products-grid input[type=checkbox][id!=mastercheckboxError][class=checkboxGroupsError]:checked').length;
        $('#mastercheckboxerror').attr('checked', numChkBoxesError == numChkBoxesCheckedError && numChkBoxesError > 0);

        var numChkBoxesDraft = $('#draft-shopping-products-grid input[type=checkbox][id!=mastercheckboxDraft][class=checkboxGroupsDraft]').length;
        var numChkBoxesCheckedDraft = $('#draft-shopping-products-grid input[type=checkbox][id!=mastercheckboxDraft][class=checkboxGroupsDraft]:checked').length;
        $('#mastercheckboxdraft').attr('checked', numChkBoxesDraft == numChkBoxesCheckedDraft && numChkBoxesDraft > 0);

        var numChkBoxesUnpublished = $('#unpublished-shopping-products-grid input[type=checkbox][id!=mastercheckboxunpublished][class=checkboxGroupsUnpublished]').length;
        var numChkBoxesCheckedUnpublished = $('#unpublished-shopping-products-grid input[type=checkbox][id!=mastercheckboxunpublished][class=checkboxGroupsUnpublished]:checked').length;
        $('#mastercheckboxunpublished').attr('checked', numChkBoxesUnpublished == numChkBoxesCheckedUnpublished && numChkBoxesUnpublished > 0);

        if (numChkBoxesChecked > 0 || numChkBoxesCheckedPublished > 0 || numChkBoxesCheckedError > 0 || numChkBoxesCheckedDraft > 0 || numChkBoxesCheckedUnpublished > 0) {
            $('#publish-merchant-center').html('<i class="fa fa-cloud-upload"></i>@T("Plugins.Seurata.GoogleShopping.Publish.MerchantCenter.Selected")');
            $('#unpublish-merchant-center').html('<i class="fa fa-eye-slash"></i>@T("Plugins.Seurata.GoogleShopping.Unpublished.Selected")');
        }
        else {
            $('#publish-merchant-center').html('<i class="fa fa-cloud-upload"></i>@T("Plugins.Seurata.GoogleShopping.Publish.MerchantCenter.All")');
            $('#unpublish-merchant-center').html('<i class="fa fa-eye-slash"></i>@T("Plugins.Seurata.GoogleShopping.Unpublish.All")');
        }
    }

    function UnPublishFeedFromMerchantCenter()
    {
        $("#ajaxBusy").hide();
        var postData = {
			selectedIds: selectedIds,
			storeId: $('#SearchStoreId').val()
        };

        //if (selectedIds.length <= 0) {
        //    $('#myModal').modal('hide');
        //    $("#syncing-div").show();
        //    $("#spinner-sync").hide();
        //    $("#sync-message").empty().html("No Product(s) selected to unpublish.");
        //    $("#spinner-sync-success").hide();
        //    $("#spinner-sync-error").show();
        //    StartIntervalOnListToHideNotifDiv(15);
        //    return false;
        //}

        addAntiForgeryToken(postData);
        $('#myModal').modal('hide');
        $("#syncing-div").show();
        $("#spinner-sync").show();
        $("#sync-message").empty().html("Getting Ready to delete feed(s) to merchant center");
        $("#spinner-sync-success").hide();
        $("#spinner-sync-error").hide();
        $("#stop-running-task-list").show();
        $.ajax({
            cache: false,
            type: "POST",
            url: "@(Url.Action("DeleteSelectedFeedFromMerchantCenter", "SeurataGoogleShopping"))",
            data: postData,
            complete: function (data) {
                $('#shopping-products-grid').data('kendoGrid').dataSource.read();
                $('#shopping-products-grid').data('kendoGrid').refresh();
            },
            error: function(xhr, ajaxOptions, thrownError) {
            },
            traditional: true
        });
        StartIntervalOnList(5);
        $("#ajaxBusy").hide();
        return false;
    }
    </script>

    <div class="panel-group">
        <div class="panel panel-default">
            <div class="panel-body">
                <h4><u>Steps to use Export/Import facility for Bulk uploads</u></h4>
                <p><b>Step 1.</b> Selecting <b>at least one product</b>, you may export the product(s) template worksheet.</p>
                <p><b>Step 2.</b> Keeping the integrity of the worksheet, please add products in rows as shown. Now use ‘import facility’.</p>
                <p><b>Step 3.</b> Click ‘Publish to Google Merchant Center’.</p>
                <p><b>IMPORTANT : </b> Import Export/Import can be used <b>ONLY</b> after the initial configuration steps are complete and have added at least ONE product successfully. </p>
            </div>
        </div>
    </div>
}


<!-- Modal For Delete -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Confirmation</h4>
            </div>
            <div class="modal-body">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">No,cancel</button>
                <button type="button" id="mod-unpub-btn" class="btn btn-primary hide-div" data-request-url="@Url.Action("DeleteSelectedFeedFromMerchantCenter", "SeurataGoogleShopping")" onclick="UnPublishFeedFromMerchantCenter(this);"><i class="fa fa-eye-slash"></i>Unpublish</button>
                <button type="button" id="mod-pub-btn" class="btn btn-primary hide-div" data-request-url="@Url.Action("PublishSelectedFeedToMerchantCenter", "SeurataGoogleShopping")" onclick="PublishFeedToMerchantCenter(this);"><i class="fa fa-cloud-upload"></i>Publish</button>
                <button type="button" id="mod-synsingle-btn" class="btn btn-primary hide-div" data-request-url="@Url.Action("SyncNow", "SeurataGoogleShopping")" onclick="StartSyncSingle(this);"><i class="fa fa-cloud-upload"></i>Publish</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal For Error Display-->
<div class="modal fade" id="errorModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h2 class="modal-title">Issues</h2>
            </div>
            <div class="modal-body" id="modalbodyData">
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    function OpenModalPopup(googleProductId) {
        if (googleProductId == '')
            return false;

        $.ajax({
            cache: false,
            type: "POST",
            url: $('#syncServiceCheck').data('request-errorpopup'),
            data: { googleProductId: googleProductId },
            success: function (data) {
                if (data !== '') {
                    $("#modalbodyData").html(data.ErrorListPartialView);
                    $('#errorModal').modal('show');
                    $('.modal-title').text('Item Issue(s)');
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
            },
            traditional: true
        });
    }

    var singleSync_id = '';
    var singleSync_handle = '';
    function SyncSingleProduct(id, handle) {
        singleSync_id = id;
        singleSync_handle = handle;
        $('#mod-pub-btn').hide();
        $('#mod-unpub-btn').hide();
        $('#mod-synsingle-btn').show();
        $('.modal-body').html("Are you sure you want to <b>publish</b> this product to google merchant center ?");
        $('#myModal').modal('show');
    }

    function StartSyncSingle() {
        var gridName = $(singleSync_handle).data('grid-name');
        $('#myModal').modal('hide');
        var postData = {
            selectedId: singleSync_id
        };
        $.ajax({
            cache: false,
            type: "POST",
            url: $(singleSync_handle).data('request-url'),
            data: postData,
            success: function (data) {
                if (data.Message !== '') {
                    $('#import-syncing-div').show();
                    $("html, body").animate({ scrollTop: 0 }, "slow");
                    $('#sync-message-import').html(data.Message);

                    if (gridName !== '') {
                        $('#' + gridName).data('kendoGrid').dataSource.read();
                    }
                    var grid = $('#shopping-products-grid').data('kendoGrid');
                    grid.dataSource.page(1);

                    setTimeout(function () {
                        $('#import-syncing-div').hide();
                        $('#sync-message-import').html('');
                    }, 8000);
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
            },
            traditional: true
        });
    }

        //For Feed Sync Status
        $(document).ready(function () {
            CheckSyncServiceOnList();
            StartIntervalOnList(5);

            $("#shopping-exportexcel-selected").on('click', function (e) {
                e.preventDefault();
                if (selectedIds.length <= 0 || selectedIds.length > 1000) {
                    $('#myModal').modal('hide');
                    $("#syncing-div").show();
                    $("#spinner-sync").hide();
                    if (selectedIds.length > 1000) {
                        $("#sync-message").empty().html("At once only 1000 products can be exported. Please revert your selection.");
                    }
                    else {
                        $("#sync-message").empty().html("No Product(s) selected to export.");
                    }
                    $("#spinner-sync-success").hide();
                    $("#spinner-sync-error").show();
                    StartIntervalOnListToHideNotifDiv(15);
                    return false;
                }

                var ids = selectedIds.join(",");
                $('#shopping-export-excel-selected-form #selectedIds').val(ids);
                $('#shopping-export-excel-selected-form').submit();

                $("#syncing-div").show();
                $("#spinner-sync").show();
                $("#sync-message").empty().html("Please wait..export in progress. It may take some time depending on number of products.");
                $("#spinner-sync-success").hide();
                $("#spinner-sync-error").hide();
                $("#stop-running-task-list").show();
            });

            $("#shopping-export-excel-selected-form").on('submit', function (e) {
                setTimeout(function () { StartIntervalOnList(5); }, 5000);
            });

            $("#stop-running-task-list").on('click', function () {
                  $.ajax({
                        cache: false,
                        type: "POST",
                        url: "@(Url.Action("StopRunningTask", "SeurataGoogleShopping"))",
                        success: function (data) {

                        },
                        error: function(xhr, ajaxOptions, thrownError) {
                        },
                        traditional: true
                });
            });
        });

         function CheckSyncServiceOnList() {
            $("#ajaxBusy").hide();
             $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.Action("CheckFeedRunning", "SeurataGoogleShopping"))",
                    success: function (data) {
                        if (data.Success) {
                            $("#syncing-div").show();
                            $("#spinner-sync").show();
                            $("#sync-message").empty().html(data.Message);
                            $("#spinner-sync-success").hide();
                            $("#spinner-sync-error").hide();
                            $("#stop-running-task-list").show();
                        } else if (data.Message !== '') {
                            ClearIntervalOnList();
                            $("#syncing-div").show();
                            $("#spinner-sync").hide();
                            $("#sync-message").empty().html(data.Message);
                            if (data.Complete) {
                                $("#spinner-sync-error").hide();
                                $("#spinner-sync-success").show();
                            } else {
                                $("#spinner-sync-success").hide();
                                $("#spinner-sync-error").show();
                            }
                            $("#stop-running-task-list").hide();
                            StartIntervalOnListToHideNotifDiv(15)
                        } else {
                            ClearIntervalOnList();
                            $("#syncing-div").hide();
                            $("#spinner-sync").hide();
                            $("#sync-message").empty();
                            $("#spinner-sync-success").hide();
                            $("#spinner-sync-error").hide();
                            $("#stop-running-task-list").hide();
                            StartIntervalOnListToHideNotifDiv(15)
                        }
                    },
                    error: function(xhr, ajaxOptions, thrownError) {
                    },
                    traditional: true
            });
             $("#ajaxBusy").hide();
        }

         function StartIntervalOnList(time) {
             ClearIntervalOnListToHideDiv();
             if (interval_id_nxt === '') {
                 interval_id_nxt = setInterval(CheckSyncServiceOnList, (time * 1000));
             }
         }

         function ClearIntervalOnList() {
             if (interval_id_nxt !== '') {
                 clearInterval(interval_id_nxt);
                 interval_id_nxt = '';
             }
         }

         function StartIntervalOnListToHideNotifDiv(time) {
             if (interval_id_nxt === '') {
                 interval_id_divHide = setInterval(HideNotificationDiv, (time * 1000));
             }
         }

         function ClearIntervalOnListToHideDiv() {
             if (interval_id_divHide !== '') {
                 clearInterval(interval_id_divHide);
                 interval_id_divHide = '';
             }
         }

         function HideNotificationDiv() {
             $("#sync-message").empty();
             $("#syncing-div").hide();
             ClearIntervalOnListToHideDiv();
         }

    function PublishFeedToMerchantCenter() {
        $('#myModal').modal('hide');
        $("#syncing-div").show();
        $("#spinner-sync").show();
        $("#sync-message").empty().html("Getting Ready to sync feed(s) to merchant center");
        $("#spinner-sync-success").hide();
        $("#spinner-sync-error").hide();
        $("#stop-running-task-list").show();

             $("#ajaxBusy").hide();
                var postData = {
					selectedIds: selectedIds,
					storeId: $('#SearchStoreId').val()
                };
                addAntiForgeryToken(postData);
                $.ajax({
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("PublishSelectedFeedToMerchantCenter", "SeurataGoogleShopping"))",
                    data: postData,
                    complete: function (data) {
                        $('#shopping-products-grid').data('kendoGrid').dataSource.read();
						$('#shopping-products-grid').data('kendoGrid').refresh();

						$('#draft-shopping-products-grid').data('kendoGrid').dataSource.read();
						$('#draft-shopping-products-grid').data('kendoGrid').refresh();

						$('#unpublished-shopping-products-grid').data('kendoGrid').dataSource.read();
						$('#unpublished-shopping-products-grid').data('kendoGrid').refresh();

						$('#error-shopping-products-grid').data('kendoGrid').dataSource.read();
						$('#error-shopping-products-grid').data('kendoGrid').refresh();
                    },
                    error: function(xhr, ajaxOptions, thrownError) {
                    },
                    traditional: true
                });
                StartIntervalOnList(5);
                $("#ajaxBusy").hide();
         }

         function PublishReadyStateFeedToMerchantCenter() {
             $("#import-syncing-div").hide();
             $("#syncing-div").show();
             $("#spinner-sync").show();
             $("#sync-message").empty().html("Getting Ready to sync feed(s) to merchant center");
             $("#spinner-sync-success").hide();
             $("#spinner-sync-error").hide();
             $("#stop-running-task-list").show();
             $("#import-syncing-div").hide();
             $("#spinner-sync-error").hide();
             $("#ajaxBusy").hide();
                $.ajax({
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("PublishReadyFeedStatusToMerchantCenter", "SeurataGoogleShopping"))",
                    complete: function (data) {
                        $('#shopping-products-grid').data('kendoGrid').dataSource.read();
						$('#shopping-products-grid').data('kendoGrid').refresh();

						$('#draft-shopping-products-grid').data('kendoGrid').dataSource.read();
						$('#draft-shopping-products-grid').data('kendoGrid').refresh();

						$('#unpublished-shopping-products-grid').data('kendoGrid').dataSource.read();
						$('#unpublished-shopping-products-grid').data('kendoGrid').refresh();

						$('#error-shopping-products-grid').data('kendoGrid').dataSource.read();
						$('#error-shopping-products-grid').data('kendoGrid').refresh();
                    },
                    error: function(xhr, ajaxOptions, thrownError) {
                    },
                    traditional: true
                });
                StartIntervalOnList(5);
                $("#ajaxBusy").hide();
         }
</script>

@*import products form*@
<div id="shopping-importexcel-window" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="importexcel-window-title">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="importexcel-window-title">@T("Plugins.Seurata.GoogleShopping.ImportFromExcel")</h4>
            </div>
            @using (Html.BeginForm("UpdateShoppingFeedToExcel", "SeurataGoogleShopping", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="form-horizontal">
                    <div class="modal-body">
                        @Html.AntiForgeryToken()
                        <ul class="common-list">
                            <li>
                                <em>@T("Plugins.Seurata.GoogleShopping.Feed.List.ImportFromExcelTip")</em>
                            </li>
                            <li>
                                <em>@T("Plugins.Seurata.GoogleShopping.ImportFromExcel.ManyRecordsWarning")</em>
                            </li>
                        </ul>
                        <div class="form-group">
                            <div class="col-md-2">
                                <div class="label-wrapper">
                                    <label class="control-label">
                                        @T("Plugins.Seurata.GoogleShopping.ExcelFile")
                                    </label>
                                </div>
                            </div>
                            <div class="col-md-10">
                                <input type="file" id="importexcelfile" name="importexcelfile" class="form-control" />
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary" id="import-button-clicked">
                            @T("Plugins.Seurata.GoogleShopping.ImportFromExcel")
                        </button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@*export selected (Excel). We don't use GET approach because it's limited to 2K-4K chars and won't work for large number of entities*@
@using (Html.BeginForm("ExportShoppingFeedToExcelSelected", "SeurataGoogleShopping", FormMethod.Post, new { id = "shopping-export-excel-selected-form" }))
{
    @Html.AntiForgeryToken()
    <input type="hidden" id="selectedIds" name="selectedIds" value="" />
}